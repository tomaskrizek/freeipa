{
   "error" : null,
   "result" : {
      "count" : 9,
      "results" : [
         {
            "texts" : {
               "login" : {
                  "header" : "Logged In As",
                  "username" : "Username",
                  "logout_error" : "Logout error",
                  "logout" : "Logout",
                  "krb_auth_msg" : "<i class=\"fa fa-info-circle\"></i> To login with <strong>Kerberos</strong>, please make sure you have valid tickets (obtainable via kinit) and <a href='http://${host}/ipa/config/unauthorized.html'>configured</a> the browser correctly, then click Login.",
                  "sync_otp_token" : "Sync OTP Token",
                  "login" : "Login",
                  "password" : "Password",
                  "form_auth" : "<i class=\"fa fa-info-circle\"></i> To login with <strong>username and password</strong>, enter them in the corresponding fields, then click Login.",
                  "loading_md" : "Loading data"
               },
               "status" : {
                  "disable" : "Disable",
                  "label" : "Status",
                  "disabled" : "Disabled",
                  "enabled" : "Enabled",
                  "working" : "Working",
                  "enable" : "Enable"
               },
               "details" : {
                  "settings" : "${entity} ${primary_key} Settings",
                  "expand_all" : "Expand All",
                  "identity" : "Identity Settings",
                  "collapse_all" : "Collapse All",
                  "general" : "General",
                  "updated" : "${entity} ${primary_key} updated",
                  "to_top" : "Back to Top"
               },
               "password" : {
                  "first_otp" : "First OTP",
                  "otp_sync_success" : "Token was synchronized",
                  "current_password_required" : "Current password is required",
                  "password_and_otp" : "Password or Password+One-Time-Password",
                  "current_password" : "Current Password",
                  "otp_info" : "<i class=\"fa fa-info-circle\"></i> <strong>One-Time-Password(OTP):</strong> Generate new OTP code for each OTP field.",
                  "new_password" : "New Password",
                  "expires_in" : "Your password expires in ${days} days.",
                  "reset_password" : "Reset Password",
                  "reset_failure" : "Password reset was not successful.",
                  "otp" : "OTP",
                  "otp_sync_invalid" : "The username, password or token codes are not correct",
                  "otp_sync_fail" : "Token synchronization failed",
                  "verify_password" : "Verify Password",
                  "password_must_match" : "Passwords must match",
                  "password" : "Password",
                  "password_change_complete" : "Password change complete",
                  "reset_password_sentence" : "Reset your password.",
                  "token_id" : "Token ID",
                  "otp_long" : "One-Time-Password",
                  "new_password_required" : "New password is required",
                  "invalid_password" : "The password or username you entered is incorrect.",
                  "second_otp" : "Second OTP"
               },
               "krbaliases" : {
                  "remove_message" : "Do you want to remove kerberos alias ${alias}?",
                  "adder_title" : "Add Kerberos Principal Alias",
                  "add_krbal_label" : "New kerberos principal alias",
                  "remove_title" : "Remove Kerberos Alias"
               },
               "tabs" : {
                  "automember" : "Automember",
                  "ipaserver" : "IPA Server",
                  "topology" : "Topology",
                  "network_services" : "Network Services",
                  "trust" : "Trusts",
                  "dns" : "DNS",
                  "identity" : "Identity",
                  "hbac" : "Host Based Access Control",
                  "automount" : "Automount",
                  "authentication" : "Authentication",
                  "role" : "Role Based Access Control",
                  "audit" : "Audit",
                  "cert" : "Certificates",
                  "policy" : "Policy",
                  "sudo" : "Sudo"
               },
               "facet_groups" : {
                  "member" : "${primary_key} members:",
                  "memberof" : "${primary_key} is a member of:",
                  "managedby" : "${primary_key} is managed by:"
               },
               "facets" : {
                  "search" : "Search",
                  "details" : "Settings"
               },
               "authtype" : {
                  "type_radius" : "RADIUS",
                  "otp" : "OTP",
                  "auth_indicator" : "Authentication indicator",
                  "custom_auth_ind_title" : "Add Custom Authentication Indicator",
                  "type_otp" : "Two factor authentication (password + OTP)",
                  "config_tooltip" : "<p>Implicit method (password) will be used if no method is chosen.</p><p><strong>Password + Two-factor:</strong> LDAP and Kerberos allow authentication with either one of the authentication types but Kerberos uses pre-authentication method which requires to use armor ccache.</p><p><strong>RADIUS with another type:</strong> Kerberos always use RADIUS, but LDAP never does. LDAP only recognize the password and two-factor authentication options.</p>",
                  "type_disabled" : "Disable per-user override",
                  "type_password" : "Password",
                  "user_tooltip" : "<p>Per-user setting, overwrites the global setting if any option is checked.</p><p><strong>Password + Two-factor:</strong> LDAP and Kerberos allow authentication with either one of the authentication types but Kerberos uses pre-authentication method which requires to use armor ccache.</p><p><strong>RADIUS with another type:</strong> Kerberos always use RADIUS, but LDAP never does. LDAP only recognize the password and two-factor authentication options.</p>",
                  "auth_indicators" : "Authentication indicators"
               },
               "measurement_units" : {
                  "number_of_passwords" : "number of passwords",
                  "seconds" : "seconds"
               },
               "buttons" : {
                  "refresh" : "Refresh",
                  "set" : "Set",
                  "stage" : "Stage",
                  "view" : "View",
                  "restore" : "Restore",
                  "disable" : "Disable",
                  "add" : "Add",
                  "get" : "Get",
                  "edit" : "Edit",
                  "find" : "Find",
                  "enable" : "Enable",
                  "add_and_close" : "Add and Close",
                  "clear_title" : "Clear all fields on the page.",
                  "issue" : "Issue",
                  "apply" : "Apply",
                  "hide" : "Hide",
                  "revoke" : "Revoke",
                  "save" : "Save",
                  "clear" : "Clear",
                  "add_and_add_another" : "Add and Add Another",
                  "back" : "Back",
                  "show" : "Show",
                  "match" : "Match",
                  "reset" : "Reset",
                  "ok" : "OK",
                  "remove" : "Delete",
                  "match_title" : "Match users according to certificate.",
                  "add_many" : "Add Many",
                  "about" : "About",
                  "remove_hold" : "Remove hold",
                  "retry" : "Retry",
                  "reset_password_and_login" : "Reset Password and Login",
                  "filter" : "Filter",
                  "close" : "Close",
                  "download" : "Download",
                  "activate" : "Activate",
                  "refresh_title" : "Reload current settings from the server.",
                  "revert" : "Revert",
                  "add_and_edit" : "Add and Edit",
                  "unapply" : "Un-apply",
                  "update" : "Update",
                  "cancel" : "Cancel",
                  "download_title" : "Download certificate as PEM formatted file.",
                  "revert_title" : "Undo all unsaved changes."
               },
               "dialogs" : {
                  "available" : "Available",
                  "add_custom_value" : "Add custom value",
                  "remove_title" : "Remove ${entity}",
                  "validation_message" : "Input form contains invalid or missing values.",
                  "batch_error_title" : "Operations Error",
                  "custom_value" : "Custom value",
                  "validation_title" : "Validation error",
                  "confirmation" : "Confirmation",
                  "show_details" : "Show details",
                  "result" : "Result",
                  "add_title" : "Add ${entity}",
                  "success" : "Success",
                  "hide_details" : "Hide details",
                  "add_confirmation" : "${entity} successfully added",
                  "edit_title" : "Edit ${entity}",
                  "dirty_message" : "This page has unsaved changes. Please save or revert.",
                  "batch_error_message" : "Some operations failed.",
                  "redirection" : "Redirection",
                  "remove_empty" : "Select entries to be removed.",
                  "about_title" : "About",
                  "prospective" : "Prospective",
                  "dirty_title" : "Unsaved Changes",
                  "about_message" : "${product}, version: ${version}"
               },
               "error_report" : {
                  "refresh" : "Refresh the page.",
                  "reload" : "Reload the browser.",
                  "title" : "An error has occurred (${error})",
                  "main_page" : "Return to the main page and retry the operation",
                  "problem_persists" : "If the problem persists please contact the system administrator.",
                  "options" : "Please try the following options:"
               },
               "true" : "True",
               "objects" : {
                  "caacl" : {
                     "any_profile" : "Any Profile",
                     "specified_profiles" : "Specified Profiles",
                     "specified_hosts" : "Specified Hosts and Groups",
                     "any_host" : "Any Host",
                     "specified_services" : "Specified Services and Groups",
                     "any_ca" : "Any CA",
                     "any_service" : "Any Service",
                     "anyone" : "Anyone",
                     "specified_cas" : "Specified CAs",
                     "ipaenabledflag" : "Rule status",
                     "no_ca_msg" : "If no CAs are specified, requests to the default CA are allowed.",
                     "profile" : "Profiles",
                     "who" : "Permitted to have certificates issued",
                     "specified_users" : "Specified Users and Groups",
                     "all" : "All"
                  },
                  "sudocmd" : {
                     "groups" : "Groups"
                  },
                  "server_role" : {
                     "label_singular" : "Server Role",
                     "label" : "Server Roles"
                  },
                  "trust" : {
                     "trustdirection" : "Trust direction",
                     "ipantflatname" : "Domain NetBIOS name",
                     "admin_account" : "Administrative account",
                     "fetch_domains" : "Fetch domains",
                     "blacklists" : "SID blacklists",
                     "preshared_password" : "Pre-shared password",
                     "ipantadditionalsuffixes" : "Alternative UPN suffixes",
                     "ipanttrusteddomainsid" : "Domain Security Identifier",
                     "establish_using" : "Establish using",
                     "trusttype" : "Trust type",
                     "details" : "Trust Settings",
                     "account" : "Account",
                     "domain" : "Domain",
                     "truststatus" : "Trust status"
                  },
                  "automountkey" : {},
                  "automountlocation" : {
                     "identity" : "Automount Location Settings"
                  },
                  "selinuxusermap" : {
                     "anyone" : "Anyone",
                     "specified_hosts" : "Specified Hosts and Groups",
                     "user" : "User",
                     "any_host" : "Any Host",
                     "host" : "Host",
                     "specified_users" : "Specified Users and Groups"
                  },
                  "service" : {
                     "valid" : "Kerberos Key Present, Service Provisioned",
                     "certificate" : "Service Certificate",
                     "unprovision_confirmation" : "Are you sure you want to unprovision this service?",
                     "provisioning" : "Provisioning",
                     "unprovisioned" : "Service unprovisioned",
                     "unprovision" : "Unprovision",
                     "missing" : "Kerberos Key Not Present",
                     "details" : "Service Settings",
                     "status" : "Status",
                     "host" : "Host Name",
                     "unprovision_title" : "Unprovisioning ${entity}",
                     "service" : "Service",
                     "delete_key_unprovision" : "Delete Key, Unprovision"
                  },
                  "dnsconfig" : {
                     "options" : "Options",
                     "forward_none" : "Forwarding disabled",
                     "update_dns_dialog_msg" : "Do you want to update system DNS records?",
                     "forward_only" : "Forward only",
                     "update_dns" : "Update System DNS Records",
                     "forward_first" : "Forward first",
                     "updated_dns" : "System DNS records updated"
                  },
                  "cert" : {
                     "find_revokedon_from" : "Revoked on from",
                     "issued_to" : "Issued To",
                     "find_subject" : "Subject",
                     "find_min_serial_number" : "Minimum serial number",
                     "privilege_withdrawn" : "Privilege Withdrawn",
                     "valid_from" : "Valid from",
                     "organizational_unit" : "Organizational Unit",
                     "remove_certificate_hold_confirmation" : "Do you want to remove the certificate hold?",
                     "new_certificate" : "New Certificate",
                     "find_issuedon_from" : "Issued on from",
                     "missing" : "No Valid Certificate",
                     "serial_number" : "Serial Number",
                     "remove_certificate_hold" : "Remove Certificate Hold for ${entity} ${primary_key}",
                     "certificate_hold" : "Certificate Hold",
                     "present" : "${count} certificate(s) present",
                     "remove_from_crl" : "Remove from CRL",
                     "find_revokedon_to" : "Revoked on to",
                     "find_issuedon_to" : "Issued on to",
                     "sha1_fingerprint" : "SHA1 Fingerprint",
                     "affiliation_changed" : "Affiliation Changed",
                     "reason" : "Reason for Revocation",
                     "sha256_fingerprint" : "SHA256 Fingerprint",
                     "download" : "Download",
                     "get_certificate" : "Get Certificate",
                     "find_max_serial_number" : "Maximum serial number",
                     "view_certificate" : "Certificate for ${entity} ${primary_key}",
                     "request_message" : "<ol> <li>Create a certificate database or use an existing one. To create a new database:<br/> <code># certutil -N -d &lt;database path&gt;</code> </li> <li>Create a CSR with subject <em>CN=&lt;${cn_name}&gt;,O=&lt;realm&gt;</em>, for example:<br/> <code># certutil -R -d &lt;database path&gt; -a -g &lt;key size&gt; -s 'CN=${cn},O=${realm}'${san}</code> </li> <li> Copy and paste the CSR (from <em>-----BEGIN NEW CERTIFICATE REQUEST-----</em> to <em>-----END NEW CERTIFICATE REQUEST-----</em>) into the text area below: </li> </ol>",
                     "common_name" : "Common Name",
                     "requested" : "Certificate requested",
                     "revoked" : "Certificate Revoked",
                     "find_validnotafter_from" : "Valid not after from",
                     "find_validnotbefore_to" : "Valid not before to",
                     "organization" : "Organization",
                     "revocation_reason" : "Revocation reason",
                     "certificate" : "Certificate",
                     "find_validnotafter_to" : "Valid not after to",
                     "valid" : "Valid Certificate Present",
                     "ca_compromise" : "CA Compromise",
                     "valid_to" : "Valid to",
                     "aa_compromise" : "AA Compromise",
                     "serial_number_hex" : "Serial Number (hex)",
                     "cessation_of_operation" : "Cessation of Operation",
                     "fingerprints" : "Fingerprints",
                     "remove_certificate_hold_simple" : "Remove Certificate Hold",
                     "superseded" : "Superseded",
                     "issued_by" : "Issued By",
                     "revoke_certificate" : "Revoke Certificate for ${entity} ${primary_key}",
                     "ca" : "CA",
                     "key_compromise" : "Key Compromise",
                     "validity" : "Validity",
                     "add_principal" : "Add principal",
                     "status" : "Status",
                     "unspecified" : "Unspecified",
                     "remove_hold" : "Remove Hold",
                     "revoke_confirmation" : "Do you want to revoke this certificate? Select a reason from the pull-down list.",
                     "find_validnotbefore_from" : "Valid not before from",
                     "expires_on" : "Expires On",
                     "view_certificate_btn" : "View Certificate",
                     "revoked_status" : "REVOKED",
                     "certificates" : "Certificates",
                     "revoke_certificate_simple" : "Revoke Certificate",
                     "delete_cert_end" : "the certificate with serial number ",
                     "note" : "Note",
                     "hold_removed" : "Certificate Hold Removed",
                     "new_cert_format" : "Certificate in base64 or PEM format",
                     "issue_certificate_generic" : "Issue New Certificate",
                     "find_revocation_reason" : "Revocation reason",
                     "issued_on" : "Issued On",
                     "issue_certificate" : "Issue New Certificate for ${entity} ${primary_key}",
                     "request_message_san" : " -8 '${cn}'"
                  },
                  "hbacrule" : {
                     "ipaenabledflag" : "Rule status",
                     "any_service" : "Any Service",
                     "anyone" : "Anyone",
                     "specified_users" : "Specified Users and Groups",
                     "user" : "Who",
                     "specified_hosts" : "Specified Hosts and Groups",
                     "service" : "Via Service",
                     "specified_services" : "Specified Services and Groups",
                     "host" : "Accessing",
                     "any_host" : "Any Host"
                  },
                  "role" : {
                     "identity" : "Role Settings"
                  },
                  "netgroup" : {
                     "host" : "Host",
                     "any_host" : "Any Host",
                     "usergroups" : "User Groups",
                     "hosts" : "Hosts",
                     "specified_hosts" : "Specified Hosts and Groups",
                     "external" : "External",
                     "users" : "Users",
                     "user" : "User",
                     "specified_users" : "Specified Users and Groups",
                     "identity" : "Netgroup Settings",
                     "netgroups" : "Netgroups",
                     "hostgroups" : "Host Groups",
                     "anyone" : "Anyone"
                  },
                  "automember" : {
                     "exclusive" : "Exclusive",
                     "hostgrouprules" : "Host group rules",
                     "attribute" : "Attribute",
                     "default_user_group" : "Default user group",
                     "expression" : "Expression",
                     "hostgrouprule" : "Host group rule",
                     "add_rule" : "Add Rule",
                     "usergrouprules" : "User group rules",
                     "inclusive" : "Inclusive",
                     "default_host_group" : "Default host group",
                     "usergrouprule" : "User group rule",
                     "add_condition" : "Add Condition into ${pkey}"
                  },
                  "idrange" : {
                     "ipabaserid" : "Primary RID base",
                     "ipaidrangesize" : "Range size",
                     "type_detect" : "Detect",
                     "type_local" : "Local domain",
                     "ipabaseid" : "Base ID",
                     "type_ipa" : "IPA trust",
                     "type" : "Range type",
                     "details" : "Range Settings",
                     "type_winsync" : "Active Directory winsync",
                     "type_ad" : "Active Directory domain",
                     "ipanttrusteddomainsid" : "Domain SID",
                     "type_ad_posix" : "Active Directory domain with POSIX attributes",
                     "ipasecondarybaserid" : "Secondary RID base"
                  },
                  "hbacsvc" : {},
                  "servers" : {
                     "svc_warning_message" : "It is strongly recommended to keep the following services installed on more than one server:",
                     "remove_server_msg" : "Deleting a server removes it permanently from the topology. Note that this is a non-reversible action.",
                     "svc_warning_title" : "Warning: Consider service replication",
                     "remove_server" : "Delete Server"
                  },
                  "publickey" : {
                     "status_mod_s" : "Modified",
                     "status_new_ns" : "New: key not set",
                     "set_dialog_title" : "Set public key",
                     "status_new_s" : "New: key set",
                     "set_dialog_help" : "Public key:",
                     "show_set_key" : "Show/Set key",
                     "status_mod_ns" : "Modified: key not set"
                  },
                  "otptoken" : {
                     "add_token" : "Add OTP Token",
                     "enable" : "Enable token",
                     "type_hotp" : "Counter-based (HOTP)",
                     "show_qr" : "Show QR code",
                     "show_uri" : "Show configuration uri",
                     "config_title" : "Configure your token",
                     "type_totp" : "Time-based (TOTP)",
                     "config_instructions" : "Configure your token by scanning the QR code below. Click on the QR code if you see this on the device you want to configure.",
                     "details" : "OTP Token Settings",
                     "app_link" : "You can use <a href=\"${link}\" target=\"_blank\">FreeOTP<a/> as a software OTP token application.",
                     "disable" : "Disable token"
                  },
                  "sudorule" : {
                     "runas" : "As Whom",
                     "user" : "Who",
                     "option_removed" : "${count} option(s) removed",
                     "specified_hosts" : "Specified Hosts and Groups",
                     "command" : "Run Commands",
                     "specified_commands" : "Specified Commands and Groups",
                     "option_added" : "Option added",
                     "allow" : "Allow",
                     "anyone" : "Anyone",
                     "deny" : "Deny",
                     "specified_groups" : "Specified Groups",
                     "ipaenabledflag" : "Rule status",
                     "options" : "Options",
                     "any_command" : "Any Command",
                     "any_group" : "Any Group",
                     "specified_users" : "Specified Users and Groups",
                     "external" : "External",
                     "any_host" : "Any Host",
                     "host" : "Access this host"
                  },
                  "hbactest" : {
                     "missing_values" : "Missing values: ",
                     "specify_external" : "Specify external ${entity}",
                     "matched" : "Matched",
                     "include_disabled" : "Include Disabled",
                     "new_test" : "New Test",
                     "unmatched" : "Unmatched",
                     "label" : "HBAC Test",
                     "access_granted" : "Access Granted",
                     "access_denied" : "Access Denied",
                     "include_enabled" : "Include Enabled",
                     "rules" : "Rules",
                     "run_test" : "Run Test"
                  },
                  "sshkeystore" : {
                     "status_new_ns" : "New: key not set",
                     "set_dialog_title" : "Set SSH key",
                     "status_mod_ns" : "Modified: key not set",
                     "set_dialog_help" : "SSH public key:",
                     "status_mod_s" : "Modified",
                     "keys" : "SSH public keys",
                     "status_new_s" : "New: key set",
                     "show_set_key" : "Show/Set key"
                  },
                  "user" : {
                     "status_confirmation" : "Are you sure you want to ${action} the user?<br/>The change will take effect immediately.",
                     "employee" : "Employee Information",
                     "misc" : "Misc. Information",
                     "contact" : "Contact Settings",
                     "mode_preserve" : "preserve",
                     "status_link" : "Click to ${action}",
                     "delete_mode" : "Delete mode",
                     "noprivate" : "No private group",
                     "account_status" : "Account Status",
                     "mode_delete" : "delete",
                     "mailing" : "Mailing Address",
                     "activeuser_label" : "Active users",
                     "unlock" : "Unlock",
                     "unlock_confirm" : "Are you sure you want to unlock user ${object}?",
                     "error_changing_status" : "Error changing account status",
                     "krbpasswordexpiration" : "Password expiration",
                     "account" : "Account Settings"
                  },
                  "trustconfig" : {
                     "options" : "Options"
                  },
                  "hostgroup" : {
                     "identity" : "Host Group Settings",
                     "host_group" : "Host Groups"
                  },
                  "certmap" : {
                     "data_label" : "Certificate mapping data",
                     "deleter_content" : "Do you want to remove certificate mapping data ${data}?",
                     "certificate" : "Certificate",
                     "subject" : "Subject",
                     "deleter_title" : "Remove Certificate Mapping Data",
                     "adder_title" : "Add Certificate Mapping Data",
                     "issuer" : "Issuer",
                     "conf_str" : "Configuration string",
                     "issuer_subject" : "Issuer and subject",
                     "version" : "Version"
                  },
                  "realmdomains" : {
                     "check_dns" : "Check DNS",
                     "identity" : "Realm Domains",
                     "check_dns_confirmation" : "Do you also want to perform DNS check?",
                     "force_update" : "Force Update"
                  },
                  "topology" : {
                     "autogenerated" : "Autogenerated",
                     "insufficient_domain_level" : "Managed topology requires minimal domain level ${domainlevel}",
                     "segment_details" : "Segment details",
                     "replication_config" : "Replication configuration"
                  },
                  "selfservice" : {},
                  "vault" : {
                     "type" : "Vault Type",
                     "symmetric_type" : "Symmetric",
                     "owners" : "Owners",
                     "service" : "Service",
                     "add_warn_standard" : "Content of 'standard' vaults can be seen by users with higher privileges (admins).",
                     "config_title" : "Vaults Config",
                     "shared_vaults_title" : "Shared Vaults",
                     "asymmetric_type" : "Asymmetric",
                     "members" : "Members",
                     "standard_type" : "Standard",
                     "type_tooltip" : "Only standard vaults can be created in WebUI, use CLI for other types of vaults.",
                     "user_vaults_title" : "User Vaults",
                     "group" : "Group",
                     "shared" : "Shared",
                     "service_vaults_title" : "Service Vaults",
                     "my_vaults_title" : "My User Vaults",
                     "add_warn_arch_ret" : "Secrets can be added/retrieved to vault only by using vault-archive and vault-retrieve from CLI.",
                     "user" : "User"
                  },
                  "host" : {
                     "unprovision" : "Unprovision",
                     "cn" : "Host Name",
                     "password_missing" : "One-Time-Password Not Present",
                     "password_set_success" : "OTP set",
                     "keytab_present" : "Kerberos Key Present, Host Provisioned",
                     "enrolled" : "Enrolled",
                     "password_reset_button" : "Reset OTP",
                     "keytab" : "Kerberos Key",
                     "password_set_button" : "Set OTP",
                     "keytab_missing" : "Kerberos Key Not Present",
                     "unprovisioned" : "Host unprovisioned",
                     "fqdn" : "Fully Qualified Host Name",
                     "unprovision_confirmation" : "Are you sure you want to unprovision this host?",
                     "certificate" : "Host Certificate",
                     "delete_key_unprovision" : "Delete Key, Unprovision",
                     "enrollment" : "Enrollment",
                     "password_present" : "One-Time-Password Present",
                     "password_set_title" : "Set One-Time-Password",
                     "password_reset_title" : "Reset One-Time-Password",
                     "generated_otp" : "Generated OTP",
                     "unprovision_title" : "Unprovisioning ${entity}",
                     "details" : "Host Settings",
                     "status" : "Status",
                     "generate_otp" : "Generate OTP",
                     "password" : "One-Time-Password"
                  },
                  "dnsrecord" : {
                     "standard" : "Standard Record Types",
                     "other" : "Other Record Types",
                     "ptr_redir_creating" : "Creating record.",
                     "ptr_redir_zone" : "Zone found: ${zone}",
                     "ptr_redir_zones_err" : "An error occurred while fetching dns zones.",
                     "ptr_redir_title" : "Redirection to PTR record",
                     "ptr_redir_record" : "Checking if record exists.",
                     "deleted_no_data" : "DNS record was deleted because it contained no data.",
                     "type" : "Record Type",
                     "ptr_redir_create" : "Create dns record",
                     "ptr_redir_record_err" : "Record not found.",
                     "ptr_redir_creating_err" : "Record creation failed.",
                     "ptr_redir_address_err" : "Address not valid, can't redirect",
                     "ptr_redir_zone_err" : "Target reverse zone not found.",
                     "redirection_dnszone" : "You will be redirected to DNS Zone.",
                     "title" : "Records for DNS Zone",
                     "data" : "Data",
                     "ptr_redir_zones" : "Fetching DNS zones."
                  },
                  "certmap_match" : {
                     "cert_for_match" : "Certificate For Match",
                     "matched_users" : "Matched Users",
                     "cert_data" : "Certificate Data",
                     "domain" : "Domain",
                     "userlogin" : "User Login",
                     "facet_label" : "Certificate Mapping Match"
                  },
                  "privilege" : {
                     "identity" : "Privilege Settings"
                  },
                  "config" : {
                     "search" : "Search Options",
                     "user" : "User Options",
                     "service" : "Service Options",
                     "selinux" : "SELinux Options",
                     "group" : "Group Options"
                  },
                  "idoverridegroup" : {
                     "anchor_label" : "Group to override",
                     "anchor_tooltip_ad" : "Enter trusted group name.",
                     "anchor_tooltip" : "Enter trusted or IPA group name. Note: search doesn't list groups from trusted domains."
                  },
                  "idoverrideuser" : {
                     "profile" : "Profile",
                     "anchor_label" : "User to override",
                     "anchor_tooltip_ad" : "Enter trusted user login.",
                     "anchor_tooltip" : "Enter trusted or IPA user login. Note: search doesn't list users from trusted domains."
                  },
                  "permission" : {
                     "managed" : "Attribute breakdown",
                     "target" : "Target",
                     "identity" : "Permission settings",
                     "filter" : "Filter",
                     "add_custom_attr" : "Add Custom Attribute",
                     "attribute" : "Attribute"
                  },
                  "radiusproxy" : {
                     "details" : "RADIUS Proxy Server Settings"
                  },
                  "sudocmdgroup" : {
                     "commands" : "Commands"
                  },
                  "stageuser" : {
                     "preserved_label" : "Preserved users",
                     "activate_confirm" : "Are you sure you want to activate selected users?",
                     "undel_one_confirm" : "Are you sure you want to restore ${object}?",
                     "undel_confirm" : "Are you sure you want to restore selected users?",
                     "label" : "Stage users",
                     "user_categories" : "User categories",
                     "stage_confirm" : "Are you sure you want to stage selected users?",
                     "activate_one_confirm" : "Are you sure you want to activate ${object}?",
                     "undel_success" : "${count} user(s) restored",
                     "activate_success" : "${count} user(s) activated",
                     "stage_one_confirm" : "Are you sure you want to stage ${object}?",
                     "stage_success" : "${count} users(s) staged"
                  },
                  "aci" : {
                     "attribute" : "Attribute"
                  },
                  "hbacsvcgroup" : {
                     "services" : "Services"
                  },
                  "idview" : {
                     "overrides_tab" : "${primary_key} overrides:",
                     "unapply_hosts_confirm" : "Are you sure you want to un-apply ID view from selected entries?",
                     "apply_hosts" : "Apply to hosts",
                     "unapply_hosts_all" : "Un-apply from hosts",
                     "ipaassignedidview" : "Assigned ID View",
                     "apply_hostgroups" : "Apply to host groups",
                     "unapply_hosts_title" : "Un-apply ID View ${primary_key} from hosts",
                     "unapply_hostgroups" : "Un-apply from host groups",
                     "unapply_hosts_all_title" : "Un-apply ID Views from hosts",
                     "appliesto_tab" : "${primary_key} applies to:",
                     "unapply_hostgroups_all_title" : "Un-apply ID Views from hosts of hostgroups",
                     "appliedtohosts_title" : "Applied to hosts",
                     "appliedtohosts" : "Applied to hosts",
                     "unapply_hostgroups_title" : "Un-apply ID View ${primary_key} from hosts of ${entity}",
                     "unapply_hosts" : "Un-apply",
                     "apply_hostgroups_title" : "Apply ID View ${primary_key} on hosts of ${entity}",
                     "apply_hosts_title" : "Apply ID view ${primary_key} on ${entity}"
                  },
                  "pwpolicy" : {
                     "identity" : "Password Policy"
                  },
                  "krbtpolicy" : {
                     "identity" : "Kerberos Ticket Policy"
                  },
                  "dnszone" : {
                     "add_permission" : "Add Permission",
                     "remove_permission_confirm" : "Are you sure you want to remove permission for DNS Zone ${object}?",
                     "soamname_change_message" : "Do you want to check if new authoritative nameserver address is in DNS",
                     "add_permission_confirm" : "Are you sure you want to add permission for DNS Zone ${object}?",
                     "remove_permission" : "Remove Permission",
                     "identity" : "DNS Zone Settings",
                     "skip_overlap_check" : "Skip overlap check",
                     "skip_dns_check" : "Skip DNS check",
                     "soamname_change_title" : "Authoritative nameserver change"
                  },
                  "delegation" : {},
                  "group" : {
                     "group_categories" : "Group categories",
                     "groups" : "Groups",
                     "posix" : "POSIX",
                     "make_posix" : "Change to POSIX group",
                     "external" : "External",
                     "type" : "Group Type",
                     "details" : "Group Settings",
                     "nonposix" : "Non-POSIX",
                     "user_groups" : "User Groups",
                     "make_external" : "Change to external group"
                  },
                  "domainlevel" : {
                     "label" : "Domain Level",
                     "set" : "Set Domain Level",
                     "label_singular" : "Domain Level",
                     "ipadomainlevel" : "Level"
                  },
                  "automountmap" : {
                     "direct" : "Direct",
                     "indirect" : "Indirect",
                     "map_type" : "Map Type"
                  }
               },
               "customization" : {
                  "customization" : "Customization",
                  "table_pagination" : "Pagination Size"
               },
               "association" : {
                  "remove" : {
                     "ipasudorunasgroup" : "Remove RunAs Groups from ${entity} ${primary_key}",
                     "managedby" : "Remove ${other_entity} Managing ${entity} ${primary_key}",
                     "memberof" : "Remove ${entity} ${primary_key} from ${other_entity}",
                     "memberdenycmd" : "Remove Deny ${other_entity} from ${entity} ${primary_key}",
                     "ipasudorunas" : "Remove RunAs ${other_entity} from ${entity} ${primary_key}",
                     "memberallowcmd" : "Remove Allow ${other_entity} from ${entity} ${primary_key}",
                     "member" : "Remove ${other_entity} from ${entity} ${primary_key}"
                  },
                  "removed" : "${count} item(s) removed",
                  "indirect_membership" : "Indirect Membership",
                  "show_results" : "Show Results",
                  "paging" : "Showing ${start} to ${end} of ${total} entries.",
                  "add" : {
                     "memberof" : "Add ${entity} ${primary_key} into ${other_entity}",
                     "memberdenycmd" : "Add Deny ${other_entity} into ${entity} ${primary_key}",
                     "ipasudorunas" : "Add RunAs ${other_entity} into ${entity} ${primary_key}",
                     "memberallowcmd" : "Add Allow ${other_entity} into ${entity} ${primary_key}",
                     "member" : "Add ${other_entity} into ${entity} ${primary_key}",
                     "ipasudorunasgroup" : "Add RunAs Groups into ${entity} ${primary_key}",
                     "managedby" : "Add ${other_entity} Managing ${entity} ${primary_key}"
                  },
                  "filter_placeholder" : "Filter available ${other_entity}",
                  "direct_membership" : "Direct Membership",
                  "added" : "${count} item(s) added",
                  "no_entries" : "No entries."
               },
               "actions" : {
                  "disable_confirm" : "Are you sure you want to disable ${object}?",
                  "delete_confirm" : "Are you sure you want to delete ${object}?",
                  "apply" : "Apply",
                  "confirm" : "Are you sure you want to proceed with the action?",
                  "title" : "Actions",
                  "automember_rebuild" : "Rebuild auto membership",
                  "enable_confirm" : "Are you sure you want to enable ${object}?",
                  "automember_rebuild_success" : "Automember rebuild membership task completed",
                  "automember_rebuild_confirm" : "Are you sure you want to rebuild auto membership?"
               },
               "ajax" : {
                  "401" : {
                     "message" : "Your session has expired. Please re-login."
                  }
               },
               "keytab" : {
                  "add_retrive" : "Allow ${other_entity} to retrieve keytab of ${primary_key}",
                  "remove_create" : "Disallow ${other_entity} to create keytab of ${primary_key}",
                  "allowed_to_retrieve" : "Allowed to retrieve keytab",
                  "allowed_to_create" : "Allowed to create keytab",
                  "remove_retrieve" : "Disallow ${other_entity} to retrieve keytab of ${primary_key}",
                  "add_create" : "Allow ${other_entity} to create keytab of ${primary_key}"
               },
               "widget" : {
                  "next" : "Next",
                  "first" : "First",
                  "validation" : {
                     "ip_v6_address" : "Not a valid IPv6 address",
                     "min_value" : "Minimum value is ${value}",
                     "ip_v4_address" : "Not a valid IPv4 address",
                     "datetime" : "Must be an UTC date/time value (e.g., \"2014-01-20 17:58:01Z\")",
                     "max_value" : "Maximum value is ${value}",
                     "error" : "Text does not match field pattern",
                     "net_address" : "Not a valid network address (examples: 2001:db8::/64, 192.0.2.0/24)",
                     "decimal" : "Must be a decimal number",
                     "ip_address" : "Not a valid IP address",
                     "required" : "Required field",
                     "format" : "Format error",
                     "unsupported" : "Unsupported value",
                     "integer" : "Must be an integer",
                     "parse" : "Parse error",
                     "port" : "'${port}' is not a valid port"
                  },
                  "prev" : "Prev",
                  "undo_all_title" : "Undo all changes in this field.",
                  "last" : "Last",
                  "page" : "Page",
                  "api_browser" : "API Browser",
                  "undo_all" : "Undo All",
                  "undo_title" : "Undo this change.",
                  "undo" : "Undo"
               },
               "errors" : {
                  "unknown_error" : "Unknown Error",
                  "internal_error" : "Internal Error",
                  "http_error" : "HTTP Error",
                  "url" : "URL",
                  "error" : "Error",
                  "no_response" : "No response",
                  "ipa_error" : "IPA Error"
               },
               "false" : "False",
               "search" : {
                  "select_all" : "Select All",
                  "deleted" : "${count} item(s) deleted",
                  "truncated" : "Query returned more results than the configured size limit. Displaying the first ${counter} results.",
                  "partial_delete" : "Some entries were not deleted",
                  "placeholder_filter" : "Filter",
                  "delete_confirm" : "Are you sure you want to delete selected entries?",
                  "placeholder" : "Search",
                  "disable_confirm" : "Are you sure you want to disable selected entries?",
                  "enable_confirm" : "Are you sure you want to enable selected entries?",
                  "enabled" : "${count} item(s) enabled",
                  "unselect_all" : "Unselect All",
                  "disabled" : "${count} item(s) disabled",
                  "quick_links" : "Quick Links"
               },
               "krbauthzdata" : {
                  "inherited" : "Inherited from server configuration",
                  "override" : "Override inherited settings",
                  "mspac" : "MS-PAC",
                  "pad" : "PAD"
               }
            },
            "error" : null
         },
         {
            "value" : null,
            "error" : null,
            "summary" : null,
            "result" : {
               "ipakrbauthzdata" : [
                  "MS-PAC",
                  "nfs:NONE"
               ],
               "dn" : "cn=ipaConfig,cn=etc,dc=dom,dc=example,dc=com",
               "ipaconfigstring" : [
                  "AllowNThash",
                  "KDC:Disable Last Success"
               ],
               "ipacertificatesubjectbase" : [
                  "O=DOM.EXAMPLE.COM"
               ],
               "ipausersearchfields" : [
                  "uid,givenname,sn,telephonenumber,ou,title"
               ],
               "ipasearchtimelimit" : [
                  "2"
               ],
               "ntp_server_server" : [
                  "vm.example.com"
               ],
               "ipamigrationenabled" : [
                  "FALSE"
               ],
               "ipadefaultprimarygroup" : [
                  "ipausers"
               ],
               "ipaselinuxusermaporder" : [
                  "guest_u:s0$xguest_u:s0$user_u:s0$staff_u:s0-s0:c0.c1023$unconfined_u:s0-s0:c0.c1023"
               ],
               "ca_renewal_master_server" : [
                  "vm.example.com"
               ],
               "ipa_master_server" : [
                  "vm.example.com"
               ],
               "ipagroupsearchfields" : [
                  "cn,description"
               ],
               "ipamaxusernamelength" : [
                  "32"
               ],
               "ipaselinuxusermapdefault" : [
                  "unconfined_u:s0-s0:c0.c1023"
               ],
               "ipadefaultloginshell" : [
                  "/bin/sh"
               ],
               "pkinit_server_server" : [
                  "vm.example.com"
               ],
               "ipadefaultemaildomain" : [
                  "dom.example.com"
               ],
               "ipapwdexpadvnotify" : [
                  "4"
               ],
               "ca_server_server" : [
                  "vm.example.com"
               ],
               "ipahomesrootdir" : [
                  "/home"
               ],
               "ipasearchrecordslimit" : [
                  "100"
               ]
            }
         },
         {
            "object" : "user",
            "error" : null,
            "command" : "user_show/1",
            "arguments" : [
               "admin"
            ]
         },
         {
            "summary" : "115 variables",
            "error" : null,
            "result" : {
               "container_service" : "cn=services,cn=accounts",
               "container_certmaprules" : "cn=certmaprules,cn=certmap",
               "container_sysaccounts" : "cn=sysaccounts,cn=etc",
               "dogtag_version" : 10,
               "container_rolegroup" : "cn=roles,cn=accounts",
               "session_duration_type" : "inactivity_timeout",
               "container_s4u2proxy" : "cn=s4u2proxy,cn=etc",
               "container_automount" : "cn=automount",
               "ca_host" : "vm.example.com",
               "http_timeout" : 30,
               "ipalib" : "/usr/lib/python2.7/site-packages/ipalib",
               "container_sudocmdgroup" : "cn=sudocmdgroups,cn=sudo",
               "dot_ipa" : "/.ipa",
               "ca_port" : 80,
               "container_sudorule" : "cn=sudorules,cn=sudo",
               "container_netgroup" : "cn=ng,cn=alt",
               "fallback" : true,
               "webui_prod" : true,
               "container_hbac" : "cn=hbac",
               "skip_version_check" : false,
               "kinit_lifetime" : null,
               "container_permission" : "cn=permissions,cn=pbac",
               "wait_for_dns" : 0,
               "container_dnsservers" : "cn=servers,cn=dns",
               "enable_ra" : true,
               "container_trusts" : "cn=trusts",
               "container_policygroups" : "cn=policygroups,cn=configs,cn=policies",
               "session_auth_duration" : "20 minutes",
               "container_realm_domains" : "cn=Realm Domains,cn=ipa,cn=etc",
               "in_tree" : false,
               "realm" : "DOM.EXAMPLE.COM",
               "container_otp" : "cn=otp",
               "ra_plugin" : "dogtag",
               "nss_dir" : "/etc/ipa/nssdb",
               "tls_version_max" : "tls1.2",
               "container_views" : "cn=views,cn=accounts",
               "container_topology" : "cn=topology,cn=ipa,cn=etc",
               "script" : "/mod_wsgi",
               "recommended_max_agmts" : 4,
               "container_accounts" : "cn=accounts",
               "container_certmap" : "cn=certmap",
               "debug" : false,
               "container_host" : "cn=computers,cn=accounts",
               "container_selinux" : "cn=usermap,cn=selinux",
               "fips_mode" : false,
               "conf" : "/etc/ipa/server.conf",
               "container_stageuser" : "cn=staged users,cn=accounts,cn=provisioning",
               "container_hostgroup" : "cn=hostgroups,cn=accounts",
               "container_policies" : "cn=policies",
               "confdir" : "/etc/ipa",
               "tls_ca_cert" : "/etc/ipa/ca.crt",
               "log" : null,
               "container_privilege" : "cn=privileges,cn=pbac",
               "startup_traceback" : false,
               "mode" : "production",
               "env_confdir" : null,
               "verbose" : 0,
               "host" : "vm.example.com",
               "server" : "vm.example.com",
               "validate_api" : false,
               "container_radiusproxy" : "cn=radiusproxy",
               "force_schema_check" : false,
               "in_server" : true,
               "container_adtrusts" : "cn=ad,cn=trusts",
               "container_applications" : "cn=applications,cn=configs,cn=policies",
               "container_automember" : "cn=automember,cn=etc",
               "container_sudocmd" : "cn=sudocmds,cn=sudo",
               "ca_ee_port" : 443,
               "ca_agent_port" : 443,
               "version" : "4.5.90.dev201706131442+gitd665224",
               "basedn" : "dc=dom,dc=example,dc=com",
               "container_deleteuser" : "cn=deleted users,cn=accounts,cn=provisioning",
               "container_roles" : "cn=roles,cn=policies",
               "ldap_uri" : "ldapi://%2fvar%2frun%2fslapd-DOM-EXAMPLE-COM.socket",
               "container_locations" : "cn=locations,cn=etc",
               "bin" : "/",
               "prompt_all" : false,
               "startup_timeout" : 300,
               "container_virtual" : "cn=virtual operations,cn=etc",
               "api_version" : "2.227",
               "domain" : "dom.example.com",
               "container_certprofile" : "cn=certprofiles,cn=ca",
               "context" : "server",
               "container_vault" : "cn=vaults,cn=kra",
               "site_packages" : "/usr/lib/python2.7/site-packages",
               "container_dna_posix_ids" : "cn=posix-ids,cn=dna,cn=ipa,cn=etc",
               "container_masters" : "cn=masters,cn=ipa,cn=etc",
               "container_user" : "cn=users,cn=accounts",
               "container_group" : "cn=groups,cn=accounts",
               "container_ranges" : "cn=ranges,cn=etc",
               "mount_ipa" : "/ipa/",
               "tls_version_min" : "tls1.0",
               "config_loaded" : true,
               "logdir" : "/var/log/ipa",
               "ca_ee_install_port" : null,
               "jsonrpc_uri" : "https://vm.example.com/ipa/json",
               "delegate" : false,
               "container_hbacservicegroup" : "cn=hbacservicegroups,cn=hbac",
               "container_dns" : "cn=dns",
               "container_custodia" : "cn=custodia,cn=ipa,cn=etc",
               "container_caacl" : "cn=caacls,cn=ca",
               "container_ca" : "cn=cas,cn=ca",
               "ca_install_port" : null,
               "container_dna" : "cn=dna,cn=ipa,cn=etc",
               "xmlrpc_uri" : "https://vm.example.com/ipa/xml",
               "container_hbacservice" : "cn=hbacservices,cn=hbac",
               "interactive" : true,
               "container_cifsdomains" : "cn=ad,cn=etc",
               "container_policylinks" : "cn=policylinks,cn=configs,cn=policies",
               "plugins_on_demand" : false,
               "container_configs" : "cn=configs,cn=policies",
               "conf_default" : "/etc/ipa/default.conf",
               "rpc_protocol" : "jsonrpc",
               "ca_agent_install_port" : null,
               "home" : "/"
            },
            "total" : 115,
            "count" : 115
         },
         {
            "value" : null,
            "error" : null,
            "result" : true,
            "summary" : null
         },
         {
            "error_code" : 4001,
            "error_name" : "NotFound",
            "error" : ": trust configuration not found",
            "error_kw" : {
               "reason" : ": trust configuration not found"
            }
         },
         {
            "error" : null,
            "result" : 1
         },
         {
            "error" : null,
            "summary" : null,
            "value" : null,
            "result" : true
         },
         {
            "error_code" : 3000,
            "error_kw" : {},
            "error_name" : "InvocationError",
            "error" : "KRA service is not enabled"
         }
      ]
   },
   "principal" : "admin@dom.example.com",
   "version" : "4.5.90.dev201706131442+gitd665224",
   "id" : null
}
